library(tidyverse)
# load data
data <- read_csv(file='titanic_dataset.csv')
colnames(data) <- tolower(colnames(data))
# clean data
data <- data %>%
dplyr::mutate(age = replace(age, is.na(age), 99),
male = ifelse(sex == 'male', 1, 0),
cabin = substr(cabin, 1, 1),
cabin = replace(cabin, is.na(cabin), 'Z')) %>%
dplyr::select(-c(passengerid, name, ticket, sex))
# one-hot encode string vars
data <- data %>%
mutate(embarkedC = as.integer(embarked == 'C'),
embarkedQ = as.integer(embarked == 'Q'),
#         embarkedS = as.integer(embarked == 'S'),
cabinA = as.integer(cabin == 'A'),
cabinB = as.integer(cabin == 'B'),
cabinC = as.integer(cabin == 'C'),
cabinD = as.integer(cabin == 'D'),
cabinE = as.integer(cabin == 'E'),
cabinF = as.integer(cabin == 'F'),
) %>%
dplyr::select(-c(cabin,embarked))
# summarize data
data <- na.omit(data)
dim(data)
skim(data)
# run OLS model to get unadjusted p-values
m1 <- lm(survived ~ . , data=data)
p <- tidy(m1) %>% select(p.value) %>% unlist()
names(p) <- NULL
round(p, digits = 3)
# calculate fwer adjusted p-values
bonf <- p.adjust(p, method = 'bonferroni')
holm <- p.adjust(p, method = 'holm')
hoch <- p.adjust(p, method = 'hochberg')
romwolf <- p_adjust(m1, method = 'RW', B = 1000)
romwolf <- romwolf[,2]
names(romwolf) <- NULL
# calculate fdr adjusted p-values
benjhoch <- p.adjust(p, method = 'BH')
benjyek <- p.adjust(p, method = 'BY')
# knockoffs
x <- data[-1]
y <- data$survived
knoff <- knockoff.filter(x, y, fdr = .1)
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
results <- round(results, digits=3)
# print results
results                   # p-values
# set up workspace
rm(list=ls())
setwd('~/Library/CloudStorage/OneDrive-Adobe/blog/posts/fwer-fdr')
set.seed(1988)
# load libraries
library(skimr)
library(broom)
library(knockoff)
library(hdm)
library(tidyverse)
# load data
data <- read_csv(file='../titanic_dataset.csv')
colnames(data) <- tolower(colnames(data))
# clean data
data <- data %>%
dplyr::mutate(age = replace(age, is.na(age), 99),
male = ifelse(sex == 'male', 1, 0),
cabin = substr(cabin, 1, 1),
cabin = replace(cabin, is.na(cabin), 'Z')) %>%
dplyr::select(-c(passengerid, name, ticket, sex))
# one-hot encode string vars
data <- data %>%
mutate(embarkedC = as.integer(embarked == 'C'),
embarkedQ = as.integer(embarked == 'Q'),
#         embarkedS = as.integer(embarked == 'S'),
cabinA = as.integer(cabin == 'A'),
cabinB = as.integer(cabin == 'B'),
cabinC = as.integer(cabin == 'C'),
cabinD = as.integer(cabin == 'D'),
cabinE = as.integer(cabin == 'E'),
cabinF = as.integer(cabin == 'F'),
) %>%
dplyr::select(-c(cabin,embarked))
# summarize data
data <- na.omit(data)
dim(data)
skim(data)
# run OLS model
m1 <- lm(survived ~ . , data=data)
p <- tidy(m1) %>% select(p.value) %>% unlist()
names(p) <- NULL
round(p, digits = 3)
# calcualte fwer adjusted p-values
bonf <- p.adjust(p, method = 'bonferroni')
holm <- p.adjust(p, method = 'holm')
hoch <- p.adjust(p, method = 'hochberg')
romwolf <- p_adjust(m1, method = 'RW', B = 1000)
romwolf <- romwolf[,2]
names(romwolf) <- NULL
# calcualte fdr adjusted p-values
benjhoch <- p.adjust(p, method = 'BH')
benjyek <- p.adjust(p, method = 'BY')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
results <- round(results, digits=3)
# print results: p-values
results
# print results: number of significant variables
colSums(results<.05)
# knockoffs
x <- data[-1]
y <- data$survived
result <- knockoff.filter(x, y, fdr = .1)
print(result)
# set up workspace
rm(list=ls())
setwd('/Users/vyasenov/Library/CloudStorage/OneDrive-Adobe/GitHub/personal/multiple-testing-methods-comparison/titanic_dataset.csv')
set.seed(1988)
# load libraries
library(skimr)
library(broom)
library(knockoff)
library(hdm)
library(tidyverse)
# load data
data <- read_csv(file='../titanic_dataset.csv')
colnames(data) <- tolower(colnames(data))
# clean data
data <- data %>%
dplyr::mutate(age = replace(age, is.na(age), 99),
male = ifelse(sex == 'male', 1, 0),
cabin = substr(cabin, 1, 1),
cabin = replace(cabin, is.na(cabin), 'Z')) %>%
dplyr::select(-c(passengerid, name, ticket, sex))
# one-hot encode string vars
data <- data %>%
mutate(embarkedC = as.integer(embarked == 'C'),
embarkedQ = as.integer(embarked == 'Q'),
#         embarkedS = as.integer(embarked == 'S'),
cabinA = as.integer(cabin == 'A'),
cabinB = as.integer(cabin == 'B'),
cabinC = as.integer(cabin == 'C'),
cabinD = as.integer(cabin == 'D'),
cabinE = as.integer(cabin == 'E'),
cabinF = as.integer(cabin == 'F'),
) %>%
dplyr::select(-c(cabin,embarked))
# summarize data
data <- na.omit(data)
dim(data)
skim(data)
# run OLS model
m1 <- lm(survived ~ . , data=data)
p <- tidy(m1) %>% select(p.value) %>% unlist()
names(p) <- NULL
round(p, digits = 3)
# calcualte fwer adjusted p-values
bonf <- p.adjust(p, method = 'bonferroni')
holm <- p.adjust(p, method = 'holm')
hoch <- p.adjust(p, method = 'hochberg')
romwolf <- p_adjust(m1, method = 'RW', B = 1000)
romwolf <- romwolf[,2]
names(romwolf) <- NULL
# calcualte fdr adjusted p-values
benjhoch <- p.adjust(p, method = 'BH')
benjyek <- p.adjust(p, method = 'BY')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
results <- round(results, digits=3)
# print results: p-values
results
# print results: number of significant variables
colSums(results<.05)
# knockoffs
x <- data[-1]
y <- data$survived
result <- knockoff.filter(x, y, fdr = .1)
print(result)
setwd('/Users/vyasenov/Library/CloudStorage/OneDrive-Adobe/GitHub/personal/multiple-testing-methods-comparison/titanic_dataset.csv')
# set up workspace
rm(list=ls())
setwd('/Users/vyasenov/Library/CloudStorage/OneDrive-Adobe/GitHub/personal/multiple-testing-methods-comparison')
set.seed(1988)
# load libraries
library(skimr)
library(broom)
library(knockoff)
library(hdm)
library(tidyverse)
# load data
data <- read_csv(file='titanic_dataset.csv')
colnames(data) <- tolower(colnames(data))
# clean data
data <- data %>%
dplyr::mutate(age = replace(age, is.na(age), 99),
male = ifelse(sex == 'male', 1, 0),
cabin = substr(cabin, 1, 1),
cabin = replace(cabin, is.na(cabin), 'Z')) %>%
dplyr::select(-c(passengerid, name, ticket, sex))
# one-hot encode string vars
data <- data %>%
mutate(embarkedC = as.integer(embarked == 'C'),
embarkedQ = as.integer(embarked == 'Q'),
#         embarkedS = as.integer(embarked == 'S'),
cabinA = as.integer(cabin == 'A'),
cabinB = as.integer(cabin == 'B'),
cabinC = as.integer(cabin == 'C'),
cabinD = as.integer(cabin == 'D'),
cabinE = as.integer(cabin == 'E'),
cabinF = as.integer(cabin == 'F'),
) %>%
dplyr::select(-c(cabin,embarked))
# summarize data
data <- na.omit(data)
dim(data)
skim(data)
# run OLS model
m1 <- lm(survived ~ . , data=data)
p <- tidy(m1) %>% select(p.value) %>% unlist()
names(p) <- NULL
round(p, digits = 3)
# calcualte fwer adjusted p-values
bonf <- p.adjust(p, method = 'bonferroni')
holm <- p.adjust(p, method = 'holm')
hoch <- p.adjust(p, method = 'hochberg')
romwolf <- p_adjust(m1, method = 'RW', B = 1000)
romwolf <- romwolf[,2]
names(romwolf) <- NULL
# calcualte fdr adjusted p-values
benjhoch <- p.adjust(p, method = 'BH')
benjyek <- p.adjust(p, method = 'BY')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
results <- round(results, digits=3)
# print results: p-values
results
# print results: number of significant variables
colSums(results<.05)
# knockoffs
x <- data[-1]
y <- data$survived
result <- knockoff.filter(x, y, fdr = .1)
print(result)
names(aa)
names(data)
names(data)[2:]
names(data)[2:,]
names(data)[1:2]
names(data)[2:]
dim(names(data))
names(data)[2:length(names(data))]
rownames(results) <-names(data)[2:length(names(data))]
rownames(results) <- names(data)[2:length(names(data))]
nrow(results)
results
rownames(results) <- c('constant',names(data)[2:length(names(data))])
results
source('1.clean.R')
source('2.methods.R')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
rownames(results) <- c('constant', names(data)[2:length(names(data))])
results <- round(results, digits=3)
# print results
results                   # p-values
colSums(results<.05)      # number of significant variables
# print knockoff results
print(knoff)
library(xtable)
xtable(results)
head(results)
results$hoch
results <- as.data.frame(results)
results$hoch
results$hoch <-NULL
head(results)
# LaTeX table
xtable(results)
source('1.clean.R')
source('2.methods.R')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
rownames(results) <- c('constant', names(data)[2:length(names(data))])
results <- round(results, digits=3)
# print results
results                   # p-values
colSums(results<.05)      # number of significant variables
# print knockoff results
print(knoff)
# LaTeX table
xtable(results)
colSums(results<.05)      # number of significant variables
v <- colSums(results<.05)      # number of significant variables
v
dim(v)
v <- as.data.frame(v)
ggplot(data=v)  +geom_bar()
ggplot(data=v, aes(x=v))  +geom_bar()
v
rownames(v)
v$names <- rownames(v)
v
rownames(v) <-NULLv
rownames(v) <-NULL
v
ggplot(data=v, aes(x=names,y=v))  +geom_bar()
ggplot(data=v, aes(x=names,y=v))  +geom_bar()
ggplot(data=v, aes(x=names,y=v))  +
geom_bar()
ggplot(data=v, aes(x=names))  +
geom_bar()
ggplot(data=v, aes(x=names))  +
geom_col()
ggplot(data=v, aes(x=names,y=v))  +
geom_col()
v
ggplot(data=v, aes(x=factor(names),y=v))  +
geom_col()
data$names <- factor(data$names, levels = c('unadj', 'bonf', 'holm'))
v$names <- factor(v$names, levels = c('unadj', 'bonf', 'holm'))
ggplot(data=v, aes(x=factor(names),y=v))  +
geom_col()
source('1.clean.R')
source('2.methods.R')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
rownames(results) <- c('constant', names(data)[2:length(names(data))])
results <- round(results, digits=3)
# print results
results                   # p-values
colSums(results<.05)      # number of significant variables
# print knockoff results
print(knoff)
# LaTeX table
xtable(results)
v <- as.data.frame(results)
names(v) <- rownames(v)
rownames(v) <- NULL
v$hoch <- NULL
v$names <- factor(v$names, levels = c('unadj', 'bonf', 'holm', 'hoch','romwolf','benjhoch','benjyek'))
ggplot(data=v, aes(x=factor(names),y=v))  +
geom_col()
v
rownames(v)
source('1.clean.R')
source('2.methods.R')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
rownames(results) <- c('constant', names(data)[2:length(names(data))])
results <- round(results, digits=3)
# print results
results                   # p-values
colSums(results<.05)      # number of significant variables
# print knockoff results
print(knoff)
# LaTeX table
xtable(results)
results
v <- as.data.frame(results)
v
names(v) <- rownames(v)
dim(v)
dim(results)
length(rownames(v))
names$v <- rownames(v)
v$names <- rownames(v)
rownames(v) <- NULL
v$hoch <- NULL
v
v <- as.data.frame(colSums(results<.05))
v$names <- rownames(v)
rownames(v) <- NULL
source('1.clean.R')
source('2.methods.R')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
rownames(results) <- c('constant', names(data)[2:length(names(data))])
results <- round(results, digits=3)
# print results
results                   # p-values
colSums(results<.05)      # number of significant variables
# print knockoff results
print(knoff)
# LaTeX table
xtable(results)
v <- as.data.frame(colSums(results<.05))
v
v$names <- rownames(v)
v
v <- as.data.frame(sig=colSums(results<.05))
source('1.clean.R')
source('2.methods.R')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
rownames(results) <- c('constant', names(data)[2:length(names(data))])
results <- round(results, digits=3)
# print results
results                   # p-values
colSums(results<.05)      # number of significant variables
# print knockoff results
print(knoff)
# LaTeX table
xtable(results)
v <- as.data.frame(sig=colSums(results<.05))
v$names <- rownames(v)
rownames(v) <- NULL
v$hoch <- NULL
colnames(v) <- 'sig'
v <- as.data.frame(colSums(results<.05))
colnames(v) <- 'sig'
v$names <- rownames(v)
rownames(v) <- NULL
v$hoch <- NULL
v
source('1.clean.R')
source('2.methods.R')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
rownames(results) <- c('constant', names(data)[2:length(names(data))])
results <- round(results, digits=3)
# print results
results                   # p-values
colSums(results<.05)      # number of significant variables
# print knockoff results
print(knoff)
# LaTeX table
xtable(results)
v <- as.data.frame(colSums(results<.05))
colnames(v) <- 'sig'
v$names <- rownames(v)
rownames(v) <- NULL
v
v <- v %>% filter(names!='hoch')
v$names <- factor(v$names, levels = c('unadj', 'bonf', 'holm', 'romwolf','benjhoch','benjyek'))
ggplot(data=v, aes(x=factor(names),y=v))  +
geom_col()
ggplot(data=v, aes(x=factor(names),y=sig))  +
geom_col()
ggplot(data=v, aes(x=names,y=sig))  +
geom_col()
ggplot(data=v, aes(x=names,y=sig))  +
geom_col() +
labs(x='MH Adjustment', y='Number of Sigificant Variables')
ggplot(data=v, aes(x=names,y=sig))  +
geom_col() +
labs(x='Multiple Hypothesis Adjustment', y='Number of Sigificant Variables')
source('1.clean.R')
source('2.methods.R')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
rownames(results) <- c('constant', names(data)[2:length(names(data))])
results <- round(results, digits=3)
# print results
results                   # p-values
colSums(results<.05)      # number of significant variables
# print knockoff results
print(knoff)
# LaTeX table
xtable(results)
v <- as.data.frame(colSums(results<.05))
colnames(v) <- 'sig'
v$names <- rownames(v)
rownames(v) <- NULL
v <- v %>% filter(names!='hoch')
v$names <- factor(v$names, levels = c('Unadj', 'bonf', 'holm', 'romwolf','benjhoch','benjyek'))
ggplot(data=v, aes(x=names,y=sig))  +
geom_col() +
labs(x='Multiple Hypothesis Adjustment', y='Number of Sigificant Variables')
source('1.clean.R')
source('2.methods.R')
# save results
results <- cbind(unadj=p,bonf,holm,hoch,romwolf,benjhoch,benjyek)
rownames(results) <- c('constant', names(data)[2:length(names(data))])
results <- round(results, digits=3)
# print results
results                   # p-values
colSums(results<.05)      # number of significant variables
# print knockoff results
print(knoff)
# LaTeX table
xtable(results)
v <- as.data.frame(colSums(results<.05))
colnames(v) <- 'sig'
v$names <- rownames(v)
rownames(v) <- NULL
v <- v %>% filter(names!='hoch')
v$names <- factor(v$names, levels = c('unadj', 'bonf', 'holm', 'romwolf','benjhoch','benjyek'))
ggplot(data=v, aes(x=names,y=sig))  +
geom_col() +
labs(x='Multiple Hypothesis Adjustment', y='Number of Sigificant Variables')
v
v$control <- c('None','FWER', 'FWER', 'FWER', 'FDR', 'FDR')
v
ggplot(data=v, aes(x=names,y=sig))  +
geom_col(color=control) +
labs(x='Multiple Hypothesis Adjustment', y='Number of Sigificant Variables')
v
ggplot(data=v, aes(x=names,y=sig))  +
geom_col(fill=control) +
labs(x='Multiple Hypothesis Adjustment', y='Number of Sigificant Variables')
ggplot(data=v, aes(x=names,y=sig,fill=control))  +
geom_col() +
labs(x='Multiple Hypothesis Adjustment', y='Number of Sigificant Variables')
v$control <- factor(v$control, levels = c('None', 'FWER', 'FDR'))
ggplot(data=v, aes(x=names,y=sig,fill=control))  +
geom_col() +
labs(x='Multiple Hypothesis Adjustment', y='Number of Sigificant Variables')
ggsave('plot.png')
getewd()
getwd()
